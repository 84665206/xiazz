######################################
#  注释
#  连接 mysql 的参数
######################################

#mysql db driverClass
jdbc.mysql.driverClassName=com.mysql.jdbc.Driver

#eshop 数据源(开发库)
jdbc.mysql.url=jdbc:mysql://127.0.0.1:3306/eshop
jdbc.mysql.username=root
jdbc.mysql.password=AAaa11

#eshop 数据源(生产库)
#jdbc.mysql.url=jdbc:mysql://120.132.22.14:3389/eshop
#jdbc.mysql.username=eshop
#jdbc.mysql.password=eshop123456

###########################   datasource setting     ########################################
#连接池中可同时连接的最大的连接数（默认值为8，调整为20，高峰单机器在20并发左右，自己根据应用场景定）
mysql.maxActive=20
#连接池启动时创建的初始化连接数量
mysql.initialSize=1
#最大等待时间，单位毫秒【1分钟】
mysql.maxWait=60000

#连接池中最大的空闲的连接数
mysql.maxIdle=15
#连接池中最小的空闲的连接数
mysql.minIdle=1

#超过removeAbandonedTimeout时间后，是否进行没用连接（废弃）的回收
mysql.removeAbandoned=true
#超过时间限制，回收没有用(废弃)的连接,单位秒
mysql.removeAbandonedTimeout=180
#标记当连接被回收时是否打印程序的stack traces日志
mysql.logAbandoned=true

##############################################################################################################################
#问题：
#1.DBCP 问题，数据库重启或者强制关闭后，无法reconnect
#2.mysql 会自动关闭长时间不用的connection,一个连接如果处于sleep状态达到mysql的参数wait_timeout指定的时间(默认为8小时),就是自动关闭这个连接
#分析：
#1.common pool中需要指定相应的连接检查参数，来避免此问题
#2.每一个请求可能会调用10来次SQL查询，如果不走事务，一个请求会重复获取链接，如果每次获取链接都进行validateObject，性能开销不是很能接受
#3.我们的系统大部分都没有使用事务，所以应该避免使用testOnBorrow参数
#结论：
#假设网站异常数据库重启，网络异常断开的频率是非常低的，我们采用异步validate connection比较合适--testWhileIdle
##############################################################################################################################
#【方案一】 定时用sql文验证空闲的连接，连接失效则从连接池中去除
# timeBetweenEvictionRunsMillis 失效检查线程运行时间间隔，默认-1，单位是毫秒【1小时】
mysql.dbcp1.timeBetweenEvictionRunsMillis=3600000
#指明连接是否被空闲连接回收器(如果有)进行检验.如果检测失败,则连接将被从池中去除
mysql.dbcp1.testWhileIdle=true
#检查的sql
mysql.dbcp1.validationQuery=select 1


#【方案二】 定时检查连接池中连接的空闲时间，如果大于minEvictableIdleTimeMillis值，就从连接池中去除
# timeBetweenEvictionRunsMillis 失效检查线程运行时间间隔，默认-1，单位是毫秒【1小时】
mysql.dbcp2.timeBetweenEvictionRunsMillis=3600000
#minEvictableIdleTimeMillis大于0 ，进行连接空闲时间判断，或为0，对空闲的连接不进行验证，单位是毫秒【20分钟】
mysql.dbcp2.minEvictableIdleTimeMillis=1200000


#【方案三】 每次从连接池中获取连接都进行有效验证，只取有效的连接。此方案性能相对受到影响，但是稳定性高
#从连接池中获取连接时，对连接是否进行有效性验证
mysql.dbcp3.testOnBorrow=true
#检查的sql
mysql.dbcp3.validationQuery=select 1
