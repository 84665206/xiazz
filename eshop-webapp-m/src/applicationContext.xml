<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
       http://www.springframework.org/schema/jdbc
       http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-3.1.xsd"
	default-init-method="init">

	<!--=============== 导入外部业务bean  begin ============================-->
	
	<!-- 扫描物理路径及注册 -->
	<context:component-scan base-package="com.eshop" />
	<!-- Annotation Config -->
	<context:annotation-config />

	<!-- MyBatis配置 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:/mapper/SqlConfiguration.xml" />
		<property name="mapperLocations" value="classpath:/mapper/*Mapper.xml" />
	</bean>
	<bean id="luolai_sqlSession"  class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>

	<!-- 事务管理器配置, 使用jdbc事务 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 使用annotation定义事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />
	<aop:aspectj-autoproxy expose-proxy="true"/>


	<beans profile="production,development">
	
		<!-- 读取配置文件-->
		<bean id="propertyConfigurer" class="com.eshop.webapp.m.util.PropertiesHandler">
			<property name="locations">
				<list>
					<value>classpath:conf/*.properties</value>
				</list>
			</property>
		</bean>

		<!-- mysql 数据源-->
		<bean id="dataSource" class="com.eshop.webapp.m.util.XBasicDataSource" destroy-method="close">
			<property name="driverClassName" value="${jdbc.mysql.driverClassName}" />
			<property name="url" value="${jdbc.mysql.url}" />
			<property name="username" value="${jdbc.mysql.username}" />
			<property name="password" value="${jdbc.mysql.password}" />
			<property name="maxActive" value="${mysql.maxActive}" />
			<property name="initialSize" value="${mysql.initialSize}" />
			<property name="maxWait" value="${mysql.maxWait}" />
			<property name="maxIdle" value="${mysql.maxIdle}" />
			<property name="minIdle" value="${mysql.minIdle}" />
			<property name="removeAbandoned" value="${mysql.removeAbandoned}" />
			<property name="removeAbandonedTimeout" value="${mysql.removeAbandonedTimeout}" />
			<property name="logAbandoned" value="${mysql.logAbandoned}" />
			<!-- 设置dbcp连接失败问题-->
			<property name="testOnBorrow" value="${mysql.dbcp3.testOnBorrow}" />
			<property name="validationQuery" value="${mysql.dbcp3.validationQuery}" />
		</bean>
		
		
		<!-- 配置 memcached-->
		<!-- <bean id="memcache" class="com.danga.MemCached.SockIOPool" factory-method="getInstance" init-method="initialize"
			destroy-method="shutDown">
			<constructor-arg>
				<value>neeaMemcachedPool</value>
			</constructor-arg>
			<property name="servers">
				<list>
					<value>${memcache.servers1}</value>
				</list>
			</property>
			<property name="initConn">
				<value>${memcache.initConn}</value>
			</property>
			<property name="minConn">
				<value>${memcache.minConn}</value>
			</property>
			<property name="maxConn">
				<value>${memcache.maxConn}</value>
			</property>
			<property name="maintSleep">
				<value>${memcache.maintSleep}</value>
			</property>
			<property name="nagle">
				<value>${memcache.nagle}</value>
			</property>
			<property name="socketTO">
				<value>${memcache.socketTO}</value>
			</property>
		</bean>
		<bean id="memCachedClient" class="com.danga.MemCached.MemCachedClient">
			<constructor-arg>
				<value>neeaMemcachedPool</value>
			</constructor-arg>
		</bean>
		<bean id="memCachedClientSupport" class="com.luolai.o2o.util.MemcachedClientSupport">
			<property name="memCachedClient" ref="memCachedClient" />
			<property name="defaultMaxIdle">
				<value>${memcache.defaultMaxIdle}</value>
			</property>
		</bean> -->

	</beans>
</beans>
